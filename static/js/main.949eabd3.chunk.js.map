{"version":3,"sources":["helpers/postcodeSignature.ts","api.ts","components/ChildSelector.tsx","config.ts","components/DataTable.tsx","components/TabbedData.tsx","components/ErrorDisplay.tsx","components/Validator.tsx","components/DropzoneUploader.tsx","components/Uploader.tsx","helpers/report/childErrorReport.ts","helpers/authorityData.ts","components/Dashboard.tsx","App.jsx","helpers/sentry.js","index.jsx"],"names":["public_key","handleUploaded903Data","uploadedFiles","selectedErrors","metadata","a","pyodide","window","console","log","globals","set","filter","e","selected","map","code","uploadErrors","runPythonAsync","toString","errorLines","split","push","length","data","get","toJs","errors","errorDefinitions","loadPyodide","runPython","indexURL","loadPackage","process","REACT_APP_MICROPIP_MODULES","extra_modules","loadErrorDefinitions","errorDefinitionsPy","error","description","affectedFields","affected_fields","ChildSelector","childIds","setSelected","rows","sort","b","localeCompare","entries","i","childId","numErrors","selectionTarget","cellStyle","backgroundColor","Row","Cell","onClick","style","float","paddingLeft","fontSize","paddingRight","height","headerTableName","childColumnName","TableStyles","styled","div","DataTable","rowData","highlight","header_elements","all_rows","Array","from","keys","header","CellHeader","row","row_elements","j","rowHeader","r","highlighted","has","JSON","stringify","className","Number","isNaN","undefined","TabbedData","tableData","errorLocations","excludedTable","useState","tabIndex","setTabIndex","shownTables","tableName","tabTitles","index","Tab","tabPanels","Panel","overflowX","Title","List","ErrorStyles","ErrorDisplay","validatedData","setChildFilter","setErrorFilter","setShown","innerRef","filterText","setFilterText","selectedError","setSelectedError","errorRows","useMemo","errorCounts","Map","forEach","locationToError","errorCodes","errorCode","errorCountsArr","firstCount","count","errorDetails","isSelected","useEffect","clearFilters","useCallback","ref","minLength","debounceTimeout","onChange","event","target","value","placeholder","Validator","childFilter","errorFilter","selectedChild","setSelectedChild","errorDisplayShown","setErrorDisplayShown","errorDisplayRef","useRef","scrollTo","handleClickOutside","current","contains","document","addEventListener","removeEventListener","filteredData","_","key","parsedData","wantedTable","childData","filterDataToChildId","errorLocation","fileName","Set","field","add","childIdsWithErrors","errorsByChildId","dataErrors","allErrors","getErrorsByChildId","filteredIdsWithErrorCounts","filteredIds","includes","childErrors","getErrorsForChild","errorToString","mb","setWidth","stopPropagation","display","width","UploadStyle","DropzoneUploader","onFiles","accept","displayedFiles","setError","onDrop","acceptedFiles","rejectedFiles","file","message","useDropzone","getRootProps","getInputProps","isDragActive","name","color","UploaderStyles","Uploader","currentFiles","addFileContent","setSelectedErrors","fileMode","setFileMode","onFilesUploaded","reader","FileReader","onabort","onerror","onload","fileText","result","readAsArrayBuffer","f","summary","open","saveErrorSummary","report_type","time","dayjs","format","report_name","report","report_data","csv_report","errorSummaryContent","Blob","type","destroy","saveAs","laMap","x","la_id","UTLA21CD","la_name","UTLA21NM","reduce","laData","Object","values","Dashboard","loadingText","setLoadingText","fileContents","setFileContents","setUploadErrors","setValidatedData","localAuthority","setLocalAuthority","collectionYears","num_years","currentDate","Date","currentYear","getFullYear","getMonth","years","year","getCollectionYears","collectionYear","setCollectionYear","uploadedFile","clearAndRestart","runValidation","newValidatedData","pythonErrors","downloadCSVs","Promise","all","then","catch","toggleErrorSelection","toggledError","newSelectedErrors","errorCopy","setAllErrors","newState","storedValue","localStorage","getItem","some","la","changeLocalAuthority","setItem","input","label","LoadingBox","loading","checked","marginRight","buttonColour","disabled","children","position","pointerEvents","justifyContent","flexWrap","textAlign","opacity","Start","start","as","Link","to","App","WidthContainer","level","href","Main","path","component","exact","SENTRY_DSN","Sentry","dsn","_init","sentryInit","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.949eabd3.chunk.js","sourcesContent":["export const public_key = `\n-----BEGIN RSA PUBLIC KEY-----\nMIICCgKCAgEAtIIMSI/vwErk16clFAE5BC6FrKeR3ihH8Hgjy6wATMrxXiOU1u9+\nYPCI1M17bECMey0XpnEtt0SJR8zhsqNlR4XT5NahhiKPLdrj35t0+/2hgyQ9C4Gm\njx/Y9hEdgD6yRbFhPIK22zE0Sadfxl3KxSy33Meh3UO6n47cGG4jhHmH5HF3+aI/\n7VFYaxTF2B4yrfX0PAwzI9nEsezX1H/P4SgwCicHtqt2EbhQ5OWNNpsboUVhF+sa\ninAWjN3cn4VLY9mQGdeISeVQrFFTS6kNrHZkeNxI846BGxeHV7OiPie4SiQby4h9\n1FOvQyjq37FbeX1eehiSbFYvuZ00Fh3wDNlKWDMYUV+U2nJQQX10c1pWRw3vfqgw\nOhGoYeXVe2/uM40nM333b5zErpCGy/gfTu4rhwUQx1ujiUdCkZiwy6UqduV1JOvD\n0JDpce+rXKw69JSxfof5x4DFEG2qk3bcD4SwiVyQBOiGmCYELXjGQamezm3xqnlg\nCBDwdIITa4Xxax3gIxG1nir86Idiy1OA4jXFPN5LESB1Ydvbd26roHrSdy027vAh\nfp17wHu2FOeGCoWN7fkHD8ncWZkYA61WOgwj9Q3K5VeBHJAS9puLda9TzS8NRR1B\na0Jal2jsQ7ISFw/eo//fdF9xnxTxuRCbj2+6QGvBpi2N8Z6O4yikBdECAwEAAQ==\n-----END RSA PUBLIC KEY-----\n`\n\n","import { ValidatedData, UploadedFile, ErrorSelected, UploadMetadata } from './types';\nimport {public_key} from \"./helpers/postcodeSignature\";\n\nexport async function handleUploaded903Data(uploadedFiles: Array<UploadedFile>, selectedErrors: Array<ErrorSelected>, metadata: UploadMetadata): Promise<[ValidatedData, Array<any>]> {\n  const pyodide = window.pyodide;\n\n  console.log('Passing uploaded data to Pyodide...');\n  pyodide.globals.set(\"uploaded_files\", uploadedFiles);\n  pyodide.globals.set(\"error_codes\", selectedErrors.filter(e => e.selected).map(({ code }) => code));\n  pyodide.globals.set(\"metadata\", metadata);\n\n  let uploadErrors = [];\n  try {\n      await pyodide.runPythonAsync(`\n        from validator903.validator import Validator\n        from validator903.report import Report\n        from validator903.config import errors as configured_errors\n        from dataclasses import asdict\n        \n        validator = Validator(metadata.to_py(), uploaded_files.to_py())\n        result = validator.validate(error_codes.to_py())\n        print(\"Finished Validating\")\n        \n        report = Report(result)\n        print(\"Created report\")\n        \n        cr = report.child_report\n        print(\"Child report generated\")\n        \n        js_files = {k: [t._asdict() for t in df.itertuples(index=True)] for k, df in validator.dfs.items()}\n        \n        error_definitions = {code: asdict(definition[0]) for code, definition in configured_errors.items()}\n\n        errors = {}\n        for row in report.child_report.itertuples():\n            errors.setdefault(row.Table, {}).setdefault(row.RowID, []).append(row.Code)\n                \n      `);\n  } catch (error) {\n      console.log('Caught Error!')\n      console.log((error as Error).toString());\n      // We need to take the second to last line to get the exception text.\n      const errorLines = (error as Error).toString().split('\\n')\n      uploadErrors.push(errorLines[errorLines.length - 2]);\n  }\n\n  const data = pyodide.globals.get(\"js_files\")?.toJs();\n  const errors = pyodide.globals.get(\"errors\")?.toJs();\n  const errorDefinitions = pyodide.globals.get(\"error_definitions\")?.toJs();\n\n  console.log('Python calculation complete.')\n\n  return [{ data, errors, errorDefinitions }, uploadErrors]\n}\n\nexport async function loadPyodide() {\n  if (!window.pyodide?.runPython) {\n    window.pyodide = await window.loadPyodide({ indexURL: \"https://cdn.jsdelivr.net/pyodide/v0.18.0/full/\" });\n    await window.pyodide.loadPackage(['micropip']);\n    console.log('Loaded pyodide, now loading custom library...');\n\n    window.pyodide.globals.set(\"pc_pubkey\", public_key);\n    await window.pyodide.runPythonAsync(`\n      import os\n      os.environ[\"QLACREF_PC_KEY\"] = pc_pubkey\n    `);\n\n    if (process.env.REACT_APP_MICROPIP_MODULES) {\n      const extra_modules = process.env.REACT_APP_MICROPIP_MODULES.split(\" \")\n      window.pyodide.globals.set(\"micropip_extra_modules\", extra_modules);\n    }\n\n    await window.pyodide.runPythonAsync(`\n      import micropip\n      import logging\n      logging.basicConfig(level=logging.INFO)\n     \n      await micropip.install('quality-lac-data-validator==0.2.0a1')\n\n      try:\n        for mod in micropip_extra_modules:\n          print(f\"Loading extra module from: {mod}\")\n          await micropip.install(mod)\n      except NameError:\n        pass\n    `);\n    console.log('Loaded custom libary.');\n  } else {\n    console.log('Pyodide already loaded.');\n  }\n}\n\nexport async function loadErrorDefinitions(): Promise<Array<ErrorSelected>> {\n  const pyodide = window.pyodide;\n  await pyodide.runPythonAsync(`\n    from validator903.config import errors as configured_errors\n    all_error_definitions = [definition[0] for definition in configured_errors.values()]\n  `);\n\n  let errorDefinitionsPy: any = window.pyodide.globals.get(\"all_error_definitions\");\n  let errorDefinitions: Array<ErrorSelected> = [];\n  for (let error of errorDefinitionsPy) {\n    errorDefinitions.push({\n      code: error.code,\n      description: error.description,\n      affectedFields: error.affected_fields,\n      selected: true,\n    })\n  }\n  return errorDefinitions\n}","import * as GovUK from 'govuk-react';\nimport React from 'react';\n\ninterface ChildSelectorProps {\n    childIds: Array<[string, number]>,\n    selected: string | null,\n    setSelected: (arg: string | null) => void,\n}\n\nexport default function ChildSelector({ childIds, selected, setSelected }: ChildSelectorProps) {\n  let rows = [];\n  for (const [i, [childId, numErrors]] of childIds.sort((a, b) => a[0].toString().localeCompare(b[0].toString())).entries()) {\n    let selectionTarget: string | null = childId;\n    let cellStyle = null;\n    \n    if (childId === selected) {\n      selectionTarget = null;\n      cellStyle = {backgroundColor: '#ccc'}\n    }\n\n    rows.push(\n      <GovUK.Table.Row key={i}>\n        <GovUK.Table.Cell key={i} onClick={() => setSelected(selectionTarget)} style={cellStyle}>\n          <div style={{float: 'left', paddingLeft: '10px'}}>{childId}</div>\n          <div style={{float: 'right', fontSize: '0.8em', paddingRight: '10px'}}>{numErrors > 0 ? `${numErrors} errors` : 'OK'}</div>\n        </GovUK.Table.Cell>\n      </GovUK.Table.Row>\n    );\n  }\n\n  return (\n    <div style={{'overflowY': 'scroll', height: '100vh'}}>\n      <GovUK.Table style={{fontSize: '1em'}}>\n        {rows}\n      </GovUK.Table>\n    </div>\n  )\n}","/**\n * Configuration for the constants used in this code.\n * \n * headerTableName - The name of the header table (which is displayed separately from the other tables)\n * childColumnName - The name of the column that is present in each table and contains the unique Child ID.\n */\nexport const headerTableName = 'Header';\nexport const childColumnName = 'CHILD';","import styled from 'styled-components';\nimport * as GovUK from 'govuk-react';\nimport { ReactElement } from 'react';\nimport { DataRow } from '../types';\n\ninterface DataTableProps {\n  rowData: Array<DataRow> | undefined,\n  highlight: Set<string>,\n}\n\nconst TableStyles = styled.div`\ntable {\n  font-size: 14px;\n}\n\ntd {\n  padding: 5px;\n}\n\n.error {\n  color: #D8000C;\n  background-color: #FFD2D2;\n}\n`\n\nexport default function DataTable({ rowData, highlight }: DataTableProps): ReactElement {\n  let header_elements = [];\n  let all_rows = [];\n\n  if (rowData && rowData.length > 0) {\n    for (const [i, header] of Array.from(rowData[0].keys()).entries()) {\n      header_elements.push(<GovUK.Table.CellHeader key={i}>{header}</GovUK.Table.CellHeader>);\n    }\n\n    for (const [i, row] of rowData.entries()) {\n      let row_elements = [];\n      for (const [j, [rowHeader, r]] of Array.from(row.entries()).entries()) {\n        const highlighted = highlight && highlight.has(JSON.stringify([row.get(\"Index\"), rowHeader]))\n        row_elements.push(<GovUK.Table.Cell key={j} className={highlighted ? 'error' : null}>{Number.isNaN(r) || r === undefined ? '[null]' : r.toString()}</GovUK.Table.Cell>);\n      }\n      all_rows.push(<GovUK.Table.Row key={i}>{row_elements}</GovUK.Table.Row>);\n    }\n\n    return (\n      <TableStyles>\n        <GovUK.Table>\n            <GovUK.Table.Row>\n              {header_elements}\n            </GovUK.Table.Row>\n            {all_rows}\n        </GovUK.Table>\n      </TableStyles>\n    )\n  } else {\n    return <GovUK.Paragraph>No data found for table.</GovUK.Paragraph>\n  }\n}","import * as GovUK from 'govuk-react';\nimport { useState, ReactElement } from 'react';\nimport DataTable from './DataTable';\nimport { ParsedData, ErrorLocations } from './../types';\n\ninterface TabbedDataProps {\n  tableData: ParsedData,\n  errorLocations: ErrorLocations,\n  excludedTable: string | null,\n}\n\nexport default function TabbedData({ tableData, errorLocations, excludedTable }: TabbedDataProps): ReactElement {\n  const [tabIndex, setTabIndex] = useState(0);\n  const shownTables = Array.from(tableData.keys()).filter(tableName => tableName !== excludedTable);\n  shownTables.sort();\n\n  const tabTitles = Array.from(shownTables.entries()).map(([index, tableName]) => {\n    return <GovUK.Tabs.Tab key={index} onClick={() => setTabIndex(index)} selected={tabIndex === index}>{tableName}</GovUK.Tabs.Tab>;\n  });\n\n  const tabPanels = Array.from(shownTables.entries()).map(([index, tableName]) => {\n    return (\n      <GovUK.Tabs.Panel key={index} selected={tabIndex === index} style={{overflowX: 'auto'}}>\n        <DataTable rowData={tableData.get(tableName)} highlight={errorLocations.get(tableName) as Set<string>} />\n      </GovUK.Tabs.Panel>\n    )\n  });\n  return (\n    <GovUK.Tabs>\n      <GovUK.Tabs.Title>Upload</GovUK.Tabs.Title>\n      <GovUK.Tabs.List>\n        {tabTitles}\n      </GovUK.Tabs.List>\n      {tabPanels}\n    </GovUK.Tabs>\n  )\n}","import * as GovUK from 'govuk-react';\nimport { DebounceInput } from 'react-debounce-input';\nimport { useMemo, useCallback, useState, useEffect, ReactElement } from 'react';\nimport { ValidatedData } from './../types';\nimport styled from 'styled-components';\n\ninterface ErrorDisplayProps {\n  validatedData: ValidatedData,\n  setChildFilter: (arg: string | null) => void;\n  setErrorFilter: (arg: string | null) => void;\n  setShown: (arg: boolean) => void;\n  innerRef: React.RefObject<HTMLInputElement>\n}\n\n// The margin-bottom has to equal height + margin-top + border (top/bottom) + padding (top/bottom)\nconst ErrorStyles = styled.div`\n.floatingContainer {\n  display: block;\n  position: relative;\n  padding: 10px 10px;\n  top: 0;\n  left: 100px;\n  width: 300px;\n  height: 300px;\n  margin-top: 5px;\n  margin-bottom: -327px;\n  border: 1px solid black;\n  background-color: #fff;\n  font-size: 10px;\n}  \n\n.floatingClose {\n  cursor: pointer;\n  float: right;\n  position: relative;\n  top: -23px;\n  left: 10px;\n}\n\ninput {\n  height: 13px;\n  width: 180px;\n}\n\n.errorFilter {\n  height: 250px;\n  overflow-y: scroll;\n  padding-right: 10px;\n}\n\ntable {\n  font-size: 10px;\n}\n\n.selectedError {\n  background-color: #ccc;\n}\n`\n\nexport default function ErrorDisplay({ validatedData, setChildFilter, setErrorFilter, setShown, innerRef }: ErrorDisplayProps): ReactElement {\n  const [filterText, setFilterText] = useState('');\n  const [selectedError, setSelectedError] = useState(null);\n\n  const errorRows = useMemo<Array<ReactElement>>(() => {\n    let errorCounts = new Map();\n    validatedData.errors.forEach(locationToError => {\n      locationToError.forEach(errorCodes => {\n        errorCodes.forEach(errorCode => {\n          errorCounts.set(errorCode, errorCounts.get(errorCode) ? errorCounts.get(errorCode) + 1 : 1)\n        })\n      })\n    });\n\n    let errorCountsArr = Array.from(errorCounts.entries());\n    errorCountsArr.sort(([, firstCount], [, secondCount]) => secondCount - firstCount);\n    return errorCountsArr.map(([errorCode, count]) => {\n      let errorDetails = validatedData.errorDefinitions.get(errorCode);\n      let isSelected = errorCode === selectedError\n      \n      return (\n          <GovUK.Table.Row key={errorCode} className={isSelected ? 'selectedError' : null} onClick={() => setSelectedError(isSelected ? null : errorCode)}>\n            <GovUK.Table.Cell>{errorCode}</GovUK.Table.Cell>\n            <GovUK.Table.Cell>{errorDetails?.get('description')}</GovUK.Table.Cell>\n            <GovUK.Table.Cell>{count}</GovUK.Table.Cell>\n          </GovUK.Table.Row>\n      )\n    })\n  }, [validatedData, selectedError]);\n\n  useEffect(() => {\n    setChildFilter(filterText);\n  }, [filterText, setChildFilter])\n\n  useEffect(() => {\n    setErrorFilter(selectedError);\n  }, [selectedError, setErrorFilter])\n\n  const clearFilters = useCallback(() => {\n    setFilterText('');\n    setSelectedError(null);\n  }, [setFilterText])\n\n  return (\n    <ErrorStyles>\n      <div ref={innerRef} className='floatingContainer'>\n        <DebounceInput minLength={2} debounceTimeout={150} onChange={event => setFilterText(event.target.value)} value={filterText} placeholder=\"Enter a child ID to filter...\" />\n        <span onClick={() => setShown(false)} className='floatingClose'>[x]</span>\n        <button style={{float: 'right'}} onClick={clearFilters}>Clear filters</button>\n        <p>Click each row to filter for only that error type.</p>\n        <div className='errorFilter'>\n          <GovUK.Table>\n            <GovUK.Table.Row>\n              <GovUK.Table.CellHeader>Code</GovUK.Table.CellHeader>\n              <GovUK.Table.CellHeader>Message</GovUK.Table.CellHeader>\n              <GovUK.Table.CellHeader>Count</GovUK.Table.CellHeader>\n            </GovUK.Table.Row>\n            {errorRows}\n          </GovUK.Table>\n        </div>\n      </div>\n    </ErrorStyles>\n  )\n}","import * as GovUK from 'govuk-react';\nimport ChildSelector from './ChildSelector';\nimport { useState, useMemo, useEffect, useRef, ReactElement } from 'react';\nimport { headerTableName, childColumnName } from './../config';\nimport DataTable from './DataTable';\nimport TabbedData from './TabbedData';\nimport ErrorDisplay from './ErrorDisplay';\nimport { DataRow, ParsedData, ValidatedData, ErrorLocations } from './../types';\n\ninterface ValidatorProps {\n  validatedData: ValidatedData\n}\n\nexport default function Validator({ validatedData }: ValidatorProps) {\n  let [childFilter, setChildFilter] = useState<string | null>(null);\n  let [errorFilter, setErrorFilter] = useState<string | null>(null);\n  let [selectedChild, setSelectedChild] = useState<string | null>(null);\n  let [errorDisplayShown, setErrorDisplayShown] = useState(false);\n\n  let errorDisplayRef = useRef(null);\n\n  // Scroll to top when this renders\n  useEffect(() => window.scrollTo(0, 0), [])\n\n\n  // Close error display if click outside\n  useEffect(() => {\n    const handleClickOutside = async (event: any) => {\n      if (errorDisplayRef.current && !(errorDisplayRef.current as any).contains(event.target)) {\n        setErrorDisplayShown(false);\n      }\n    };\n\n    document.addEventListener(\"click\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside)\n    }\n\n  }, [errorDisplayRef])\n\n  /**\n   * Filters the data that is shown to the selected child\n   */\n  const filteredData = useMemo(() => {\n    let filteredData: ParsedData = new Map();\n    validatedData.data.forEach((_, key) => {\n      filteredData.set(key, filterDataToChildId(validatedData.data, selectedChild, key))\n    })\n    return filteredData;\n  }, [validatedData, selectedChild])\n\n  /**\n   * Computes a set of error locations used for highlighting. These are coordinates (index, columnName).\n   * The co-ordinates are then stringify-ed to allow hash comparison in a Set.\n   */\n  const errorLocations = useMemo<ErrorLocations>(() => {\n    const errorLocations = new Map();\n    validatedData.errors.forEach((errorLocation, fileName) => {\n      let errors = new Set();\n      errorLocation.forEach((errorCodes, index) => {\n        errorCodes.forEach(errorCode => {\n          let affectedFields = validatedData.errorDefinitions.get(errorCode)?.get('affected_fields') as Array<String>\n          affectedFields.forEach(field => {\n            errors.add(JSON.stringify([index, field]));\n          });\n        });\n      });\n      errorLocations.set(fileName, errors);\n    })\n\n    return errorLocations;\n  }, [validatedData])\n\n  /**\n   * Computes the list of errors for each child.\n  */\n  const childIdsWithErrors = useMemo<Array<[string, Array<string>]>>(() => {\n    let errorsByChildId = getErrorsByChildId(validatedData);\n    return Array.from(errorsByChildId.entries());\n  }, [validatedData])\n  \n  /**\n   * The child ID errors then get filtered to include only filtered Child IDs, or filtered errors.\n   * If a filter is not set it is assumed we should see everything.\n   * We then compute counts to pass to ChildSelector\n   */\n  const filteredIdsWithErrorCounts = useMemo<Array<[string, number]>>(() => {\n    let filteredIds: Array<[string, number]> = [];\n    for (let [childId, errors] of childIdsWithErrors) {\n      let numErrors = errors.filter(e => errorFilter ? e === errorFilter : true).length;\n      let childMatches = childFilter ? childId.toString().includes(childFilter) : true;\n      let errorMatches = errorFilter ? numErrors > 0 : true;\n\n      if (childMatches && errorMatches) {\n        filteredIds.push([childId, numErrors]);\n      }\n    }\n    return filteredIds;\n  }, [childIdsWithErrors, childFilter, errorFilter]);\n\n  const childErrors = useMemo<Array<ReactElement>>(() => {\n    let errors = getErrorsForChild(validatedData, selectedChild);\n    const errorToString = ((errorCode: string) => {\n      let error = validatedData.errorDefinitions.get(errorCode);\n      return `Error ${error?.get('code')} - ${error?.get('description')}`\n    });\n\n    return Array.from(errors.entries()).map(([i, e]) => <GovUK.ListItem key={i} style={{fontSize: '1em'}}>{errorToString(e)}</GovUK.ListItem>);\n  }, [validatedData, selectedChild])\n\n  return (\n    <>\n    <GovUK.GridRow mb={5}>\n      <GovUK.GridCol setWidth='200px'>\n        <div>\n          <GovUK.H4 mb={8} style={{'display': 'inline', 'marginRight': '10px'}}>Child ID</GovUK.H4>\n          <button \n            onClick={event => {\n              // Stop the click-outside event from also firing\n              event.stopPropagation();\n              setErrorDisplayShown(!errorDisplayShown);\n            }} \n            style={{display: 'inline', backgroundColor: (childFilter || errorFilter) ? '#a7c2d1' : undefined}}\n          >Filter</button>\n        </div>\n        {errorDisplayShown\n          && <ErrorDisplay innerRef={errorDisplayRef} validatedData={validatedData} setChildFilter={setChildFilter} setErrorFilter={setErrorFilter} setShown={setErrorDisplayShown}/>\n        }\n        <ChildSelector childIds={filteredIdsWithErrorCounts} selected={selectedChild} setSelected={setSelectedChild} />\n      </GovUK.GridCol>\n      <GovUK.GridCol>\n        {selectedChild\n        ? (\n            <>\n            <div style={{width: '50%'}}>\n              <GovUK.H4>Header</GovUK.H4>\n              <DataTable rowData={filteredData.get(headerTableName)} highlight={errorLocations.get(headerTableName) as Set<string>} />\n            </div>\n            <GovUK.SectionBreak mb={9}/>\n            <TabbedData tableData={filteredData} errorLocations={errorLocations} excludedTable={headerTableName} />\n            {childErrors.length > 0\n              ? (\n                <>\n                <GovUK.H4>Errors</GovUK.H4>\n                <GovUK.UnorderedList style={{fontSize: '1em'}}>\n                  {childErrors}\n                </GovUK.UnorderedList>\n                </>\n                )\n              : <></>\n            }\n            </>\n          )\n        : <GovUK.Caption>Select a child...</GovUK.Caption>\n        }\n      </GovUK.GridCol>\n    </GovUK.GridRow>\n    </>\n  )\n}\n\nfunction filterDataToChildId(parsedData: ParsedData, selectedChild: string | null, wantedTable: string) {\n  let rowData: Array<DataRow> = [];\n\n  parsedData.get(wantedTable)?.forEach(childData => {\n      let child_id = childData.get(childColumnName);\n      if (child_id === selectedChild) {\n        rowData.push(childData);\n      }\n  });\n  return rowData;\n}\n\nfunction getErrorsForChild({data: parsedData, errors: dataErrors}: ValidatedData, childId: string | null): Array<string> {\n  if (!childId) { return []; }\n\n  let allErrors: Array<string> = [];\n\n  parsedData.forEach((data, fileName) => {\n    data.forEach(row => {\n      if (row.get(childColumnName) === childId) {\n        let index = row.get('Index') as number;\n        let errors = dataErrors.get(fileName)?.get(index);\n        if (errors) {errors.forEach(e => allErrors.push(e))}\n      }\n    })\n  })\n\n  return allErrors;\n}\n\nfunction getErrorsByChildId({data: parsedData, errors: dataErrors}: ValidatedData): Map<string, Array<string>> {\n  let allErrors: Map<string, Array<string>> = new Map();\n\n  parsedData.forEach((data, fileName) => {\n    data.forEach(row => {\n      let childId = row.get(childColumnName) as string;\n      if (!allErrors.has(childId)) {allErrors.set(childId, []);}\n      let index = row.get('Index') as number;\n      let errors = dataErrors.get(fileName)?.get(index);\n      if (errors) {errors.forEach(e => allErrors.get(childId)?.push(e))}\n    })\n  })\n\n  return allErrors;\n}","import * as GovUK from 'govuk-react';\nimport { useCallback, useState, ReactElement } from 'react';\nimport { FileRejection, useDropzone } from 'react-dropzone';\nimport styled from 'styled-components';\nimport { FilesCallback, UploadedFile } from './../types';\n\ninterface DropzoneUploaderProps {\n  onFiles: FilesCallback,\n  description: string,\n  accept: string,\n  displayedFiles: Array<UploadedFile>\n};\n\nconst UploadStyle = styled.div`\n  border: 2px dashed #999999;\n  padding: 5px;\n  color: #666666;\n\n  ul, li {\n    color: #666666;\n  }\n`\n\nexport default function DropzoneUploader({onFiles, description, accept, displayedFiles}: DropzoneUploaderProps): ReactElement {\n  let [error, setError] = useState<string | null>();\n\n  const onDrop = useCallback(\n    (acceptedFiles, rejectedFiles) => {\n      onFiles({ description, acceptedFiles });\n\n      rejectedFiles.forEach( (file: FileRejection) => {\n        setError(file.errors[0].message)\n      });\n  }, [setError, description, onFiles])\n\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop, accept})\n\n  const displayText = () => {\n    if (error) {\n      return <p style={{color: 'red'}}>{error}</p>\n    } else if (isDragActive) {\n      return <p>Drop the files here ...</p>\n    } else if (displayedFiles.length === 0) {\n      return <p>Drag and drop some files here, or click to select files</p>\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <UploadStyle {...getRootProps()}>\n      <input {...getInputProps()} />\n      {displayedFiles.length > 0 && (\n        <>\n        <GovUK.Paragraph mb={1}>Located files (click to add more):</GovUK.Paragraph>\n        <GovUK.UnorderedList mb={1}>{displayedFiles.map(file => <GovUK.ListItem key={file.name}>{file.name}</GovUK.ListItem>)}</GovUK.UnorderedList>\n        </>\n      )}\n      {displayText()}\n    </UploadStyle>\n  )\n}","import styled from 'styled-components';\nimport { useCallback, useState, ReactElement } from 'react';\nimport * as GovUK from 'govuk-react';\nimport DropzoneUploader from './DropzoneUploader';\nimport { ErrorSelected, FilesCallback, UploadedFile, UploadedFilesCallback } from './../types';\n\ninterface UploaderProps { \n  currentFiles: Array<UploadedFile>,\n  addFileContent: UploadedFilesCallback,\n  uploadErrors: Array<any>,\n  selectedErrors: Array<ErrorSelected>,\n  setSelectedErrors: (arg1: Array<ErrorSelected>) => void;\n};\n\nconst UploaderStyles = styled.div`\n.disabled {\n  opacity: 50%;\n  pointer-events: none;\n}\n\n.disabledMode {\n  opacity: 50%;\n  pointer-events: none;\n  text-decoration: line-through;\n}\n`\n\nexport default function Uploader({ currentFiles, addFileContent, uploadErrors, selectedErrors, setSelectedErrors }: UploaderProps): ReactElement {\n  const [fileMode, setFileMode] = useState('csv');\n\n  const onFilesUploaded = useCallback<FilesCallback>(({description, acceptedFiles}) => {\n    acceptedFiles.forEach( file => {\n      const reader = new FileReader()\n\n      reader.onabort = () => console.log('File reading failed.')\n      reader.onerror = () => console.log('File reading error.')\n      reader.onload = () =>  {\n        const fileText = reader.result as ArrayBuffer;\n        console.log(`Finished reading (${description}) file ${file.name}.`);\n        addFileContent({name: file.name, description, fileText });\n      }\n\n      reader.readAsArrayBuffer(file);\n    })\n  }, [addFileContent])\n\n  return (\n    <UploaderStyles>\n      <GovUK.Paragraph>\n        This tool will not send data to any third party. It uses the browser as an application to locate files in your computer and run scripts\n        on them to identify errors. Once the browser is loaded, you can locate the files and run the validation offline.\n      </GovUK.Paragraph>\n      \n      <GovUK.Tabs>\n        <GovUK.Tabs.Title>Locate</GovUK.Tabs.Title>\n        <GovUK.Tabs.List>\n          <GovUK.Tabs.Tab onClick={() => setFileMode('csv')} selected={fileMode === 'csv'} \n            className={fileMode !== 'csv' && currentFiles.length > 0 ? 'disabledMode' : null}>CSV Files</GovUK.Tabs.Tab>\n          <GovUK.Tabs.Tab onClick={() => setFileMode('xml')} selected={fileMode === 'xml'}\n            className={fileMode !== 'xml' && currentFiles.length > 0 ? 'disabledMode' : null}>XML Files</GovUK.Tabs.Tab>\n        </GovUK.Tabs.List>\n        <GovUK.Tabs.Panel selected={fileMode === 'csv'}>\n          <GovUK.GridRow>\n            <GovUK.GridCol>\n              <GovUK.H6>This year</GovUK.H6>\n              <DropzoneUploader description='This year (CSV)' onFiles={onFilesUploaded} accept='.csv' displayedFiles={currentFiles.filter(f => f.description === 'This year (CSV)')} />\n            </GovUK.GridCol>\n            <GovUK.GridCol setWidth=\"one-half\" className={currentFiles.length > 0 ? null : 'disabled'}>\n              <GovUK.H6>Previous year</GovUK.H6>\n              <DropzoneUploader description='Prev year (CSV)' onFiles={onFilesUploaded} accept='.csv' displayedFiles={currentFiles.filter(f => f.description === 'Prev year (CSV)')} />\n            </GovUK.GridCol>\n          </GovUK.GridRow>\n        </GovUK.Tabs.Panel>\n        <GovUK.Tabs.Panel selected={fileMode === 'xml'}>\n          <GovUK.GridRow>\n            <GovUK.GridCol>\n              <GovUK.H6>This year</GovUK.H6>\n              <DropzoneUploader description='This year (XML)' onFiles={onFilesUploaded} accept='.xml' displayedFiles={currentFiles.filter(f => f.description === 'This year (XML)')} />\n            </GovUK.GridCol>\n            <GovUK.GridCol setWidth=\"one-half\" className={currentFiles.length > 0 ? null : 'disabled'}>\n              <GovUK.H6>Previous year</GovUK.H6>\n              <DropzoneUploader description='Prev year (XML)' onFiles={onFilesUploaded} accept='.xml' displayedFiles={currentFiles.filter(f => f.description === 'Prev year (XML)')} />\n            </GovUK.GridCol>\n          </GovUK.GridRow>\n        </GovUK.Tabs.Panel>\n      </GovUK.Tabs>\n\n      {uploadErrors.length > 0\n        ? (\n          <GovUK.Details summary=\"Errors\" open>\n            {Array.from(uploadErrors.entries(), ([i, error]) => <GovUK.ErrorText key={i}>{error.toString()}</GovUK.ErrorText>)}\n          </GovUK.Details>\n        )\n        : null\n      }\n    </UploaderStyles>\n  )\n}\n","import {saveAs} from \"file-saver\";\nimport dayjs from \"dayjs\";\n\nexport const saveErrorSummary = async (report_type: string) => {\n    const time = dayjs().format('YYYYMMDD-HHmmss')\n    const report_name = report_type === \"ChildErrorSummary\" ? 'children' : 'errors';\n    const pyodide = window.pyodide;\n    try {\n        const report = pyodide.globals.get(\"report\");\n        const report_data = report.csv_report(report_name);\n        let errorSummaryContent = new Blob([report_data],\n            {type: 'text/csv'});\n        report.destroy()\n        saveAs(errorSummaryContent, `${report_type}-${time}.csv`);\n    } catch (error) {\n        console.log('Caught Error!')\n        console.log((error as Error).toString());\n    }\n}\n\nexport const saveExcelSummary = async () => {\n    const time = dayjs().format('YYYYMMDD-HHmmss')\n    const pyodide = window.pyodide;\n    try {\n        const report = pyodide.globals.get(\"report\");\n        const report_data = report.excel_report()\n        let errorSummaryContent = new Blob([report_data.toJs],\n            {type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'});\n        report.destroy()\n        report_data.destroy()\n        saveAs(errorSummaryContent, `ErrorReport-${time}.xlsx`);\n    } catch (error) {\n        console.log('Caught Error!')\n        console.log((error as Error).toString());\n    }\n}\n\n","import authorities from 'quality-lac-data-ref-authorities/qlacref_authorities/records.json';\nimport {LaData, LaMap} from \"../types\";\n\nconst laReducer = (map: LaMap, value: LaData): LaMap => {\n    map[value.la_id] = value;\n    return map;\n}\n\nexport const laMap = authorities.map(x => {return {\n    la_id: x.UTLA21CD,\n    la_name: x.UTLA21NM,\n}}).reduce(laReducer, {})\n\nexport const laData = Object.values(laMap).sort((a, b) => a.la_name > b.la_name? 1 : -1)\n","import * as GovUK from 'govuk-react';\nimport { Spinner } from '@govuk-react/icons';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { handleUploaded903Data, loadErrorDefinitions, loadPyodide } from '../api';\nimport Validator from \"./Validator\";\nimport Uploader from \"./Uploader\";\nimport {\n  ErrorSelected,\n  UploadedFile,\n  UploadedFilesCallback,\n  UploadMetadata,\n  ValidatedData\n} from '../types';\nimport { useMemo } from 'react';\nimport {\n  saveErrorSummary,\n} from \"../helpers/report/childErrorReport\";\nimport {laData} from \"../helpers/authorityData\";\n\nexport default function Dashboard() {\n  const [loadingText, setLoadingText] = useState(\"Loading Python initially (takes around 30 seconds)...\");\n  const [fileContents, setFileContents] = useState<Array<UploadedFile>>([]);\n  const [uploadErrors, setUploadErrors] = useState<Array<any>>([]);\n  const [validatedData, setValidatedData] = useState<ValidatedData | null>();\n  const [selectedErrors, setSelectedErrors] = useState<Array<ErrorSelected>>([]);\n  const [localAuthority, setLocalAuthority] = useState<string>(laData[0].la_id);\n\n  const collectionYears = useMemo(() => getCollectionYears(5), []);\n  const [collectionYear, setCollectionYear] = useState<string>(collectionYears[0]);\n\n  useEffect(() => {\n    (async () => {\n      await loadPyodide();\n      let selectedErrors = await loadErrorDefinitions();\n      setSelectedErrors(selectedErrors);\n      setLoadingText(\"\");\n    })();\n  }, [])\n\n  const addFileContent = useCallback<UploadedFilesCallback>(uploadedFile => {\n    fileContents.push(uploadedFile); // We have to push to the old state in case the callback isn't updated in children\n    setFileContents([...fileContents]);\n  }, [fileContents])\n\n  const clearAndRestart = useCallback(() => {\n    setUploadErrors([]);\n    setValidatedData(null);\n    setFileContents([]);\n  }, [])\n\n  const runValidation = useCallback(async () => {\n    setUploadErrors([]);\n    setLoadingText(\"Loading postcode file (initial load takes 60 seconds)...\");\n    const metadata: UploadMetadata = {\n      localAuthority: localAuthority as string,\n      collectionYear: collectionYear,\n    }\n    setLoadingText(\"Running validation...\")\n    let [newValidatedData, pythonErrors] = await handleUploaded903Data(fileContents, selectedErrors, metadata);\n    if (pythonErrors.length === 0) {\n      setValidatedData(newValidatedData);\n    } else {\n      clearAndRestart();\n      setUploadErrors(pythonErrors)\n    }\n    setLoadingText(\"\");\n  }, [fileContents, selectedErrors, clearAndRestart, localAuthority, collectionYear])\n\n  const downloadCSVs = useCallback( () => {\n    if (validatedData) {\n      Promise.all([\n        saveErrorSummary('ErrorCounts'),\n        saveErrorSummary('ChildErrorSummary'),\n      ]).then(() => {\n        console.log(\"Export completed\")\n      }).catch(() => {\n        console.error(\"Export failed\")\n      })\n    }\n\n\n  }, [validatedData])\n\n  const toggleErrorSelection = useCallback(toggledError => {\n    let newSelectedErrors: Array<ErrorSelected> = [];\n    for (let error of selectedErrors) {\n      let errorCopy = { ...error }\n      if (errorCopy.code === toggledError.code) {\n        errorCopy.selected = !errorCopy.selected;\n      }\n      newSelectedErrors.push(errorCopy);\n    }\n\n    setSelectedErrors(newSelectedErrors);\n  }, [selectedErrors, setSelectedErrors])\n\n  const setAllErrors = useCallback(newState => {\n    let newSelectedErrors: Array<ErrorSelected> = [];\n    for (let error of selectedErrors) {\n      let errorCopy = { ...error }\n      errorCopy.selected = newState;\n      newSelectedErrors.push(errorCopy);\n    }\n\n    setSelectedErrors(newSelectedErrors);\n  }, [selectedErrors, setSelectedErrors])\n\n  useEffect(() => {\n    let storedValue = window.localStorage.getItem('localAuthority');\n\n    // Only set this if its present (i.e. fail if our LA list has changed)\n    if (storedValue && laData.some(la => la.la_id === storedValue)) {\n      setLocalAuthority(storedValue);\n    }\n  }, [setLocalAuthority])\n\n  const changeLocalAuthority = useCallback(event => {\n    setLocalAuthority(event.target.value);\n    window.localStorage.setItem('localAuthority', event.target.value);\n  }, [setLocalAuthority]);\n\n\n  return (\n    <>\n    {validatedData\n      ? <Validator validatedData={validatedData} />\n      : <>\n        <Uploader currentFiles={fileContents} addFileContent={addFileContent} uploadErrors={uploadErrors} selectedErrors={selectedErrors} setSelectedErrors={setSelectedErrors}/>\n        <GovUK.Select input={{value: collectionYear, onChange: (e: React.ChangeEvent<HTMLInputElement>) => setCollectionYear(e.target.value)}} label='Collection Year' mb={4}>\n          {collectionYears.map(collectionYear => <option key={collectionYear} value={collectionYear}>{collectionYear}</option>)}\n        </GovUK.Select>\n        <GovUK.Select input={{value: localAuthority ? localAuthority : undefined, onChange: changeLocalAuthority}} label='Local Authority' mb={4}>\n          {laData.map(({la_id, la_name}) => <option key={la_id} value={la_id}>{la_name}</option>)}\n        </GovUK.Select>\n      </>\n    }\n\n    <LoadingBox loading={loadingText}>\n      <GovUK.Details summary={`Validation Rules (${selectedErrors.filter(e => e.selected).length} selected, ${selectedErrors.filter(e => !e.selected).length} unselected)`}>\n        <GovUK.Button onClick={() => setAllErrors(true)}>Select All </GovUK.Button> <GovUK.Button onClick={() => setAllErrors(false)}>Deselect All </GovUK.Button>\n        {selectedErrors.map(error => <GovUK.Checkbox key={error.code} checked={error.selected} onChange={() => toggleErrorSelection(error)}>{error.code} - {error.description}</GovUK.Checkbox>)}\n      </GovUK.Details>\n\n\n\n      <div style={{marginRight: '10%', display: 'inline'}}>\n        <GovUK.Button onClick={runValidation}>Validate</GovUK.Button>\n      </div>\n      <div style={{marginRight: '10%', display: 'inline'}}>\n        <GovUK.Button onClick={clearAndRestart}>Clear Data and Start Again</GovUK.Button>\n      </div>\n      <div style={{marginRight: '10%', display: 'inline'}}>\n        {validatedData\n          ? <GovUK.Button onClick={downloadCSVs}>Download CSVs</GovUK.Button>\n          : <GovUK.Button buttonColour='gray' disabled>Download CSVs</GovUK.Button>\n        }\n      </div>\n    </LoadingBox>\n    </>\n  )\n}\n\nfunction LoadingBox({children, loading}: any) {\n  if (loading) {\n    return (\n      <div style={{ position: 'relative', pointerEvents: 'none'}}>\n        <div style={{width: '100%', position: 'absolute', display: 'flex', justifyContent: 'center', flexWrap: 'wrap'}}>\n          <div style={{width: '100%', textAlign: 'center', height: '25px', fontSize: '24px'}}>{loading}</div>\n          <Spinner style={{width: '50px', height: '50px', display: 'block'}} />\n        </div>\n        <div style={{opacity: '30%'}}>\n          {children}\n        </div>\n      </div>\n    )\n  } else {\n    return children\n  }\n}\n\nfunction getCollectionYears(num_years: number): Array<string> {\n  let currentDate = new Date();\n  let currentYear = currentDate.getFullYear()\n  if (currentDate.getMonth() < 4) {\n    currentYear = currentYear - 1\n  }\n  let years = [currentYear]\n  for (let i = 1; i < num_years; i++) {\n    years.push(currentYear - i)\n  }\n\n  return years.map(year => `${year}/${(year + 1) % 100}`)\n}","import * as GovUK from 'govuk-react';\nimport { MemoryRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport Dashboard from './components/Dashboard';\n\n\nfunction App() {\n  return (\n    <Router>\n      <GovUK.GlobalStyle />\n      <GovUK.Page.WidthContainer style={{'height': '100vh', 'width': '75%', 'maxWidth': 'none'}}>\n        <GovUK.PhaseBanner level=\"beta\">This is a new service - <GovUK.Link href=\"https://join.slack.com/t/datatoinsight/shared_invite/zt-nuw179pj-n5Glvc7S1bFbeE~l2vZf_w\">your feedback can help us improve it.</GovUK.Link></GovUK.PhaseBanner>\n        <GovUK.Page.Main>\n          <GovUK.H2>SSDA903 Data Validation Service</GovUK.H2>\n          <Switch>\n            <Route path=\"/application\" component={Dashboard} />\n            <Route exact path=\"/\" component={Start} />\n          </Switch>\n        </GovUK.Page.Main>\n      </GovUK.Page.WidthContainer>\n    </Router>\n  );\n}\n\nfunction Start() {\n  return (\n    <>\n    <GovUK.Paragraph>Click Start to begin.</GovUK.Paragraph>\n    <GovUK.Button start as={Link} to=\"/application\">\n      Start now\n    </GovUK.Button>\n    </>\n  )\n}\n\nexport default App;\n","import * as Sentry from \"@sentry/react\";\n\nconst _init = () => {\n    const SENTRY_DSN = process.env.REACT_APP_SENTRY_DSN;\n    if (!SENTRY_DSN) {\n        return;\n    }\n    Sentry.init({\n        dsn: SENTRY_DSN,\n    });\n}\n\nexport const init = () => {\n    try {\n        _init()\n    } catch {\n        console.error(\"Failed to initialise Sentry\")\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'normalize.css';\nimport {init as sentryInit} from \"./helpers/sentry\";\n\nsentryInit();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}